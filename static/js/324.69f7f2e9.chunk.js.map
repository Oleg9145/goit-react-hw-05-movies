{"version":3,"file":"static/js/324.69f7f2e9.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/css/cast.module.css?bd60","components/Cast.jsx","server/server.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"divContainer\":\"cast_divContainer__mUVKx\",\"heading\":\"cast_heading__JcZfA\",\"castList\":\"cast_castList__rqmAb\",\"castListItem\":\"cast_castListItem__tptOa\",\"castImage\":\"cast_castImage__rDqxA\",\"actorName\":\"cast_actorName__lF6If\",\"characterName\":\"cast_characterName__JgjwN\",\"goBackButton\":\"cast_goBackButton__tD416\"};","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from '../server/server';\nimport { useNavigate } from 'react-router-dom';\nimport css from '../css/cast.module.css';\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const castData = await fetchCast(movieId);\n        setCast(castData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <div className={css.divContainer}>\n      <button onClick={() => navigate(-1)} className={css.goBackButton}>\n        Go Back\n      </button>\n      <h2 className={css.heading}>Cast</h2>\n      <ul className={css.castList}>\n        {cast.map(member => (\n          <li key={member.castId} className={css.castListItem}>\n            {member.profilePicURL && (\n              <img\n                src={member.profilePicURL}\n                alt={member.actorName}\n                className={css.castImage}\n              />\n            )}\n            <p className={css.actorName}>{member.actorName}</p>\n            <p className={css.characterName}>{member.characterName}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport { Cast };\n","import axios from 'axios';\n\nconst KEY = 'b8d685aa89f64a6cf112c60dddfc9250';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async (\n  timeWindow = 'day',\n  page = 1,\n  language = 'en-US'\n) => {\n  try {\n    const response = await axios.get(`${BASE_URL}trending/all/${timeWindow}`, {\n      params: {\n        api_key: KEY,\n        page: page,\n        language: language,\n      },\n    });\n\n    return response.data.results.map(\n      ({ id, title, overview, poster_path }) => ({\n        id,\n        title,\n        overview,\n        posterURL: `https://image.tmdb.org/t/p/w500${poster_path}`,\n      })\n    );\n  } catch (error) {\n    throw error;\n  }\n};\n// Функція для пошуку фільмів\nexport const fetchMovies = async (query, page = 1) => {\n  try {\n    const response = await axios.get(`${BASE_URL}search/movie`, {\n      params: {\n        api_key: KEY,\n        query: query,\n        page: page,\n        language: 'en-US',\n      },\n    });\n\n    return response.data.results.map(\n      ({ id, title, overview, poster_path }) => ({\n        id,\n        title,\n        overview,\n        posterURL: `https://api.themoviedb.org/3/movie/${id}/images`, // постер фільму\n      })\n    );\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n\n    return {\n      id: response.data.id,\n      title: response.data.title,\n      overview: response.data.overview,\n      posterURL: `https://api.themoviedb.org/3/movie/${movieId}/images`,\n      genres: response.data.genres.map(genre => genre.name).join(', '),\n      releaseDate: response.data.release_date,\n    };\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}/credits`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n\n    return response.data.cast.map(\n      ({ cast_id, name, character, profile_path }) => ({\n        castId: cast_id,\n        actorName: name,\n        characterName: character,\n        profilePicURL: profile_path\n          ? `https://image.tmdb.org/t/p/w500${profile_path}`\n          : null,\n      })\n    );\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async (movieId, page = 1) => {\n  try {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}/reviews`, {\n      params: {\n        api_key: KEY,\n        page: page,\n      },\n    });\n\n    return response.data.results.map(({ id, author, content }) => ({\n      id,\n      author,\n      content,\n    }));\n  } catch (error) {\n    throw error;\n  }\n};\n"],"names":["Cast","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","navigate","useNavigate","useEffect","fetchMovieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","castData","_context","prev","next","fetchCast","sent","t0","console","error","stop","apply","arguments","_jsxs","className","css","children","_jsx","onClick","map","member","profilePicURL","src","alt","actorName","characterName","castId","KEY","BASE_URL","fetchTrendingMovies","timeWindow","page","language","response","_args","length","undefined","axios","concat","params","api_key","abrupt","data","results","_ref2","id","title","overview","poster_path","posterURL","fetchMovies","_ref3","_callee2","query","_args2","_context2","_ref4","_x","fetchMovieDetails","_ref5","_callee3","_context3","genres","genre","name","join","releaseDate","release_date","_x2","_ref6","_callee4","_context4","_ref7","cast_id","character","profile_path","_x3","fetchMovieReviews","_ref8","_callee5","_args5","_context5","_ref9","author","content","_x4"],"sourceRoot":""}