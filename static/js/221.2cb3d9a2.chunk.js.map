{"version":3,"file":"static/js/221.2cb3d9a2.chunk.js","mappings":"sQAIMA,EAAS,WACb,IAAAC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA0CL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAChCG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IACMC,EADS,IAAIC,gBAAgBJ,EAASK,QACjBC,IAAI,SAE3BH,IACFV,EAASU,GACTI,EAAkBJ,GAEtB,GAAG,CAACH,EAASK,SAEb,IAAME,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMnB,GAAK,IAAAoB,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEXC,EAAAA,EAAAA,IAAYxB,GAAO,KAAD,EAAlCoB,EAAOC,EAAAI,KACbpB,EAAiBe,GAASC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAE1BM,QAAQC,MAAKP,EAAAK,IAAQ,yBAAAL,EAAAQ,OAAA,GAAAV,EAAA,kBAExB,gBAPsBW,GAAA,OAAAd,EAAAe,MAAA,KAAAC,UAAA,KASjBC,EAAY,eAAAC,GAAAjB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAiB,IAAA,OAAAjB,IAAAA,MAAA,SAAAkB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACnBjB,EAAS,iBAAD+B,OAAkBrC,IAC1Be,EAAkBf,GAAO,wBAAAoC,EAAAP,OAAA,GAAAM,EAAA,KAC1B,kBAHiB,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KAKlB,OACEM,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAQC,QAAS,kBAAMnC,GAAU,EAAE,EAACiC,SAAC,aACrCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAAA,SACEE,KAAK,OACLC,MAAO3C,EACP4C,SAAU,SAAAC,GAAC,OAAI5C,EAAS4C,EAAEC,OAAOH,MAAM,KAEzCH,EAAAA,EAAAA,KAAA,UAAQC,QAASR,EAAaM,SAAC,YAC/BC,EAAAA,EAAAA,KAAA,MAAAD,SACGnC,EAAc2C,KAAI,SAAAC,GAAK,OACtBR,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,GAAE,UAAAb,OAAYW,EAAMG,IAAKZ,SAAES,EAAMI,SADhCJ,EAAMG,GAEV,QAKf,C,8LCnDME,EAAM,mCACNC,EAAW,gCAEJC,EAAmB,eAAAvC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAqC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA5B,UAAA,OAAAd,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGf,OAFlBiC,EAAUI,EAAAC,OAAA,QAAAC,IAAAF,EAAA,GAAAA,EAAA,GAAG,MACbH,EAAIG,EAAAC,OAAA,QAAAC,IAAAF,EAAA,GAAAA,EAAA,GAAG,EACPF,EAAQE,EAAAC,OAAA,QAAAC,IAAAF,EAAA,GAAAA,EAAA,GAAG,QAAOvC,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGOwC,EAAAA,EAAAA,IAAU,GAAD1B,OAAIiB,EAAQ,iBAAAjB,OAAgBmB,GAAc,CACxEQ,OAAQ,CACNC,QAASZ,EACTI,KAAMA,EACNC,SAAUA,KAEX,KAAD,EANY,OAARC,EAAQtC,EAAAI,KAAAJ,EAAA6C,OAAA,SAQPP,EAASQ,KAAK/C,QAAQ2B,KAC3B,SAAAb,GAAA,IAAGiB,EAAEjB,EAAFiB,GAAIC,EAAKlB,EAALkB,MAAOgB,EAAQlC,EAARkC,SAAUC,EAAWnC,EAAXmC,YAAW,MAAQ,CACzClB,GAAAA,EACAC,MAAAA,EACAgB,SAAAA,EACAE,UAAU,kCAADjC,OAAoCgC,GAC9C,KACF,cAAAhD,EAAAC,KAAA,GAAAD,EAAAK,GAAAL,EAAA,SAAAA,EAAAK,GAAC,KAAD,oBAAAL,EAAAQ,OAAA,GAAAV,EAAA,mBAIJ,kBAzB+B,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KA2BnBR,EAAW,eAAA+C,GAAAtD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAiB,EAAOnC,GAAK,IAAAyD,EAAAE,EAAAa,EAAAxC,UAAA,OAAAd,IAAAA,MAAA,SAAAkB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OAAU,OAARkC,EAAIe,EAAAX,OAAA,QAAAC,IAAAU,EAAA,GAAAA,EAAA,GAAG,EAACpC,EAAAd,KAAA,EAAAc,EAAAb,KAAA,EAEtBwC,EAAAA,EAAAA,IAAU,GAAD1B,OAAIiB,EAAQ,gBAAgB,CAC1DU,OAAQ,CACNC,QAASZ,EACTrD,MAAOA,EACPyD,KAAMA,EACNC,SAAU,WAEX,KAAD,EAPY,OAARC,EAAQvB,EAAAX,KAAAW,EAAA8B,OAAA,SASPP,EAASQ,KAAK/C,QAAQ2B,KAC3B,SAAA0B,GAAA,IAAGtB,EAAEsB,EAAFtB,GAAIC,EAAKqB,EAALrB,MAAOgB,EAAQK,EAARL,SAAqBK,EAAXJ,YAAW,MAAQ,CACzClB,GAAAA,EACAC,MAAAA,EACAgB,SAAAA,EACAE,UAAU,sCAADjC,OAAwCc,EAAE,WACpD,KACF,aAAAf,EAAAd,KAAA,EAAAc,EAAAV,GAAAU,EAAA,SAAAA,EAAAV,GAAC,KAAD,oBAAAU,EAAAP,OAAA,GAAAM,EAAA,kBAIJ,gBAtBuBL,GAAA,OAAAyC,EAAAxC,MAAA,KAAAC,UAAA,KAwBX0C,EAAiB,eAAAC,GAAA1D,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA0D,EAAMC,GAAO,IAAAlB,EAAA,OAAAzC,IAAAA,MAAA,SAAA4D,GAAA,cAAAA,EAAAxD,KAAAwD,EAAAvD,MAAA,cAAAuD,EAAAxD,KAAA,EAAAwD,EAAAvD,KAAA,EAEnBwC,EAAAA,EAAAA,IAAU,GAAD1B,OAAIiB,EAAQ,UAAAjB,OAASwC,GAAW,CAC9Db,OAAQ,CACNC,QAASZ,EACTK,SAAU,WAEX,KAAD,EALY,OAARC,EAAQmB,EAAArD,KAAAqD,EAAAZ,OAAA,SAOP,CACLf,GAAIQ,EAASQ,KAAKhB,GAClBC,MAAOO,EAASQ,KAAKf,MACrBgB,SAAUT,EAASQ,KAAKC,SACxBE,UAAU,sCAADjC,OAAwCwC,EAAO,WACxDE,OAAQpB,EAASQ,KAAKY,OAAOhC,KAAI,SAAAiC,GAAK,OAAIA,EAAMC,IAAI,IAAEC,KAAK,MAC3DC,YAAaxB,EAASQ,KAAKiB,eAC5B,OAEqD,MAFrDN,EAAAxD,KAAA,EAAAwD,EAAApD,GAAAoD,EAAA,SAEDnD,QAAQC,MAAM,gCAA+BkD,EAAApD,IAASoD,EAAApD,GAAA,yBAAAoD,EAAAjD,OAAA,GAAA+C,EAAA,kBAGzD,gBArB6BS,GAAA,OAAAV,EAAA5C,MAAA,KAAAC,UAAA,KAuBjBsD,EAAS,eAAAC,GAAAtE,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAsE,EAAMX,GAAO,IAAAlB,EAAA,OAAAzC,IAAAA,MAAA,SAAAuE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,cAAAkE,EAAAnE,KAAA,EAAAmE,EAAAlE,KAAA,EAEXwC,EAAAA,EAAAA,IAAU,GAAD1B,OAAIiB,EAAQ,UAAAjB,OAASwC,EAAO,YAAY,CACtEb,OAAQ,CACNC,QAASZ,KAEV,KAAD,EAJY,OAARM,EAAQ8B,EAAAhE,KAAAgE,EAAAvB,OAAA,SAMPP,EAASQ,KAAKuB,KAAK3C,KACxB,SAAA4C,GAAA,IAAGC,EAAOD,EAAPC,QAASX,EAAIU,EAAJV,KAAMY,EAASF,EAATE,UAAWC,EAAYH,EAAZG,aAAY,MAAQ,CAC/CC,OAAQH,EACRI,UAAWf,EACXgB,cAAeJ,EACfK,cAAeJ,EAAY,kCAAAzD,OACWyD,GAClC,KACL,KACF,OAEkD,MAFlDL,EAAAnE,KAAA,EAAAmE,EAAA/D,GAAA+D,EAAA,SAED9D,QAAQC,MAAM,6BAA4B6D,EAAA/D,IAAS+D,EAAA/D,GAAA,yBAAA+D,EAAA5D,OAAA,GAAA2D,EAAA,kBAGtD,gBAtBqBW,GAAA,OAAAZ,EAAAxD,MAAA,KAAAC,UAAA,KAwBToE,EAAiB,eAAAC,GAAApF,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAoF,EAAOzB,GAAO,IAAApB,EAAAE,EAAA4C,EAAAvE,UAAA,OAAAd,IAAAA,MAAA,SAAAsF,GAAA,cAAAA,EAAAlF,KAAAkF,EAAAjF,MAAA,OAAU,OAARkC,EAAI8C,EAAA1C,OAAA,QAAAC,IAAAyC,EAAA,GAAAA,EAAA,GAAG,EAACC,EAAAlF,KAAA,EAAAkF,EAAAjF,KAAA,EAE9BwC,EAAAA,EAAAA,IAAU,GAAD1B,OAAIiB,EAAQ,UAAAjB,OAASwC,EAAO,YAAY,CACtEb,OAAQ,CACNC,QAASZ,EACTI,KAAMA,KAEP,KAAD,EALY,OAARE,EAAQ6C,EAAA/E,KAAA+E,EAAAtC,OAAA,SAOPP,EAASQ,KAAK/C,QAAQ2B,KAAI,SAAA0D,GAAsB,MAAQ,CAC7DtD,GADoCsD,EAAFtD,GAElCuD,OAF4CD,EAANC,OAGtCC,QAHqDF,EAAPE,QAI/C,KAAE,aAAAH,EAAAlF,KAAA,EAAAkF,EAAA9E,GAAA8E,EAAA,SAAAA,EAAA9E,GAAC,KAAD,oBAAA8E,EAAA3E,OAAA,GAAAyE,EAAA,kBAIN,gBAjB6BM,GAAA,OAAAP,EAAAtE,MAAA,KAAAC,UAAA,I","sources":["components/Movies.jsx","server/server.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { fetchMovies } from '../server/server';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const searchQuery = params.get('query');\n\n    if (searchQuery) {\n      setQuery(searchQuery);\n      fetchAndSetMovies(searchQuery);\n    }\n  }, [location.search]);\n\n  const fetchAndSetMovies = async query => {\n    try {\n      const results = await fetchMovies(query);\n      setSearchResults(results);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSearch = async () => {\n    navigate(`/movies?query=${query}`);\n    fetchAndSetMovies(query);\n  };\n\n  return (\n    <div>\n      <button onClick={() => navigate(-1)}>Go Back</button>\n      <h1>Search Movies</h1>\n      <input\n        type=\"text\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n      <button onClick={handleSearch}>Search</button>\n      <ul>\n        {searchResults.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movie/${movie.id}`}>{movie.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport { Movies };\n","import axios from 'axios';\n\nconst KEY = 'b8d685aa89f64a6cf112c60dddfc9250';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async (\n  timeWindow = 'day',\n  page = 1,\n  language = 'en-US'\n) => {\n  try {\n    const response = await axios.get(`${BASE_URL}trending/all/${timeWindow}`, {\n      params: {\n        api_key: KEY,\n        page: page,\n        language: language,\n      },\n    });\n\n    return response.data.results.map(\n      ({ id, title, overview, poster_path }) => ({\n        id,\n        title,\n        overview,\n        posterURL: `https://image.tmdb.org/t/p/w500${poster_path}`,\n      })\n    );\n  } catch (error) {\n    throw error;\n  }\n};\n// Функція для пошуку фільмів\nexport const fetchMovies = async (query, page = 1) => {\n  try {\n    const response = await axios.get(`${BASE_URL}search/movie`, {\n      params: {\n        api_key: KEY,\n        query: query,\n        page: page,\n        language: 'en-US',\n      },\n    });\n\n    return response.data.results.map(\n      ({ id, title, overview, poster_path }) => ({\n        id,\n        title,\n        overview,\n        posterURL: `https://api.themoviedb.org/3/movie/${id}/images`, // постер фільму\n      })\n    );\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n\n    return {\n      id: response.data.id,\n      title: response.data.title,\n      overview: response.data.overview,\n      posterURL: `https://api.themoviedb.org/3/movie/${movieId}/images`,\n      genres: response.data.genres.map(genre => genre.name).join(', '),\n      releaseDate: response.data.release_date,\n    };\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}/credits`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n\n    return response.data.cast.map(\n      ({ cast_id, name, character, profile_path }) => ({\n        castId: cast_id,\n        actorName: name,\n        characterName: character,\n        profilePicURL: profile_path\n          ? `https://image.tmdb.org/t/p/w500${profile_path}`\n          : null,\n      })\n    );\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async (movieId, page = 1) => {\n  try {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}/reviews`, {\n      params: {\n        api_key: KEY,\n        page: page,\n      },\n    });\n\n    return response.data.results.map(({ id, author, content }) => ({\n      id,\n      author,\n      content,\n    }));\n  } catch (error) {\n    throw error;\n  }\n};\n"],"names":["Movies","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","searchResults","setSearchResults","navigate","useNavigate","location","useLocation","useEffect","searchQuery","URLSearchParams","search","get","fetchAndSetMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","results","_context","prev","next","fetchMovies","sent","t0","console","error","stop","_x","apply","arguments","handleSearch","_ref2","_callee2","_context2","concat","_jsxs","children","_jsx","onClick","type","value","onChange","e","target","map","movie","Link","to","id","title","KEY","BASE_URL","fetchTrendingMovies","timeWindow","page","language","response","_args","length","undefined","axios","params","api_key","abrupt","data","overview","poster_path","posterURL","_ref3","_args2","_ref4","fetchMovieDetails","_ref5","_callee3","movieId","_context3","genres","genre","name","join","releaseDate","release_date","_x2","fetchCast","_ref6","_callee4","_context4","cast","_ref7","cast_id","character","profile_path","castId","actorName","characterName","profilePicURL","_x3","fetchMovieReviews","_ref8","_callee5","_args5","_context5","_ref9","author","content","_x4"],"sourceRoot":""}