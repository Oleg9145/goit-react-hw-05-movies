{"version":3,"file":"static/js/400.1e673742.chunk.js","mappings":"kPACA,EAA+B,2B,SCGzBA,EAAO,WACX,IAAAC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAexB,OAbAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEOC,EAAAA,EAAAA,MAAsB,KAAD,EAA5CJ,EAAcC,EAAAI,KACpBZ,EAAUO,GAAgBC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAE1BM,QAAQC,MAAKP,EAAAK,IAAQ,yBAAAL,EAAAQ,OAAA,GAAAV,EAAA,kBAExB,kBAPsB,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KASvBhB,GACF,GAAG,KAGDiB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBAEJC,EAAAA,EAAAA,KAAA,MAAAD,SACGvB,EAAOyB,KAAI,SAAAC,GAAK,OACfF,EAAAA,EAAAA,KAAA,MAAAD,UACEH,EAAAA,EAAAA,MAACO,EAAAA,GAAI,CAACC,GAAE,UAAAC,OAAYH,EAAMI,IAAKP,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,OAAKO,IAAKL,EAAMM,UAAWC,IAAKP,EAAMQ,QACrCR,EAAMQ,UAHFR,EAAMI,GAKV,QAKf,C,8LClCMK,EAAM,mCACNC,EAAW,gCAEJxB,EAAmB,eAAAR,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAA8B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtB,UAAA,OAAAb,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGf,OAFlB0B,EAAUI,EAAAC,OAAA,QAAAC,IAAAF,EAAA,GAAAA,EAAA,GAAG,MACbH,EAAIG,EAAAC,OAAA,QAAAC,IAAAF,EAAA,GAAAA,EAAA,GAAG,EACPF,EAAQE,EAAAC,OAAA,QAAAC,IAAAF,EAAA,GAAAA,EAAA,GAAG,QAAOhC,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGOiC,EAAAA,EAAAA,IAAU,GAADf,OAAIO,EAAQ,iBAAAP,OAAgBQ,GAAc,CACxEQ,OAAQ,CACNC,QAASX,EACTG,KAAMA,EACNC,SAAUA,KAEX,KAAD,EANY,OAARC,EAAQ/B,EAAAI,KAAAJ,EAAAsC,OAAA,SAQPP,EAASQ,KAAKC,QAAQxB,KAC3B,SAAAyB,GAAA,IAAGpB,EAAEoB,EAAFpB,GAAII,EAAKgB,EAALhB,MAAOiB,EAAQD,EAARC,SAAUC,EAAWF,EAAXE,YAAW,MAAQ,CACzCtB,GAAAA,EACAI,MAAAA,EACAiB,SAAAA,EACAnB,UAAU,kCAADH,OAAoCuB,GAC9C,KACF,cAAA3C,EAAAC,KAAA,GAAAD,EAAAK,GAAAL,EAAA,SAAAA,EAAAK,GAAC,KAAD,oBAAAL,EAAAQ,OAAA,GAAAV,EAAA,mBAIJ,kBAzB+B,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KA2BnBkC,EAAW,eAAAC,GAAAjD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAiD,EAAOC,GAAK,IAAAlB,EAAAE,EAAAiB,EAAAtC,UAAA,OAAAb,IAAAA,MAAA,SAAAoD,GAAA,cAAAA,EAAAhD,KAAAgD,EAAA/C,MAAA,OAAU,OAAR2B,EAAImB,EAAAf,OAAA,QAAAC,IAAAc,EAAA,GAAAA,EAAA,GAAG,EAACC,EAAAhD,KAAA,EAAAgD,EAAA/C,KAAA,EAEtBiC,EAAAA,EAAAA,IAAU,GAADf,OAAIO,EAAQ,gBAAgB,CAC1DS,OAAQ,CACNC,QAASX,EACTqB,MAAOA,EACPlB,KAAMA,EACNC,SAAU,WAEX,KAAD,EAPY,OAARC,EAAQkB,EAAA7C,KAAA6C,EAAAX,OAAA,SASPP,EAASQ,KAAKC,QAAQxB,KAC3B,SAAAkC,GAAA,IAAG7B,EAAE6B,EAAF7B,GAAII,EAAKyB,EAALzB,MAAOiB,EAAQQ,EAARR,SAAqBQ,EAAXP,YAAW,MAAQ,CACzCtB,GAAAA,EACAI,MAAAA,EACAiB,SAAAA,EACAnB,UAAU,sCAADH,OAAwCC,EAAE,WACpD,KACF,aAAA4B,EAAAhD,KAAA,EAAAgD,EAAA5C,GAAA4C,EAAA,SAAAA,EAAA5C,GAAC,KAAD,oBAAA4C,EAAAzC,OAAA,GAAAsC,EAAA,kBAIJ,gBAtBuBK,GAAA,OAAAN,EAAApC,MAAA,KAAAC,UAAA,KAwBX0C,EAAiB,eAAAC,GAAAzD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAyD,EAAMC,GAAO,IAAAxB,EAAA,OAAAlC,IAAAA,MAAA,SAAA2D,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,cAAAsD,EAAAvD,KAAA,EAAAuD,EAAAtD,KAAA,EAEnBiC,EAAAA,EAAAA,IAAU,GAADf,OAAIO,EAAQ,UAAAP,OAASmC,GAAW,CAC9DnB,OAAQ,CACNC,QAASX,EACTI,SAAU,WAEX,KAAD,EALY,OAARC,EAAQyB,EAAApD,KAAAoD,EAAAlB,OAAA,SAOP,CACLjB,GAAIU,EAASQ,KAAKlB,GAClBI,MAAOM,EAASQ,KAAKd,MACrBiB,SAAUX,EAASQ,KAAKG,SACxBnB,UAAU,sCAADH,OAAwCmC,EAAO,WACxDE,OAAQ1B,EAASQ,KAAKkB,OAAOzC,KAAI,SAAA0C,GAAK,OAAIA,EAAMC,IAAI,IAAEC,KAAK,MAC3DC,YAAa9B,EAASQ,KAAKuB,eAC5B,OAEqD,MAFrDN,EAAAvD,KAAA,EAAAuD,EAAAnD,GAAAmD,EAAA,SAEDlD,QAAQC,MAAM,gCAA+BiD,EAAAnD,IAASmD,EAAAnD,GAAA,yBAAAmD,EAAAhD,OAAA,GAAA8C,EAAA,kBAGzD,gBArB6BS,GAAA,OAAAV,EAAA5C,MAAA,KAAAC,UAAA,KAuBjBsD,EAAS,eAAAC,GAAArE,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAqE,EAAMX,GAAO,IAAAxB,EAAA,OAAAlC,IAAAA,MAAA,SAAAsE,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAjE,MAAA,cAAAiE,EAAAlE,KAAA,EAAAkE,EAAAjE,KAAA,EAEXiC,EAAAA,EAAAA,IAAU,GAADf,OAAIO,EAAQ,UAAAP,OAASmC,EAAO,YAAY,CACtEnB,OAAQ,CACNC,QAASX,KAEV,KAAD,EAJY,OAARK,EAAQoC,EAAA/D,KAAA+D,EAAA7B,OAAA,SAMPP,EAASQ,KAAK6B,KAAKpD,KACxB,SAAAqD,GAAA,IAAGC,EAAOD,EAAPC,QAASX,EAAIU,EAAJV,KAAMY,EAASF,EAATE,UAAWC,EAAYH,EAAZG,aAAY,MAAQ,CAC/CC,OAAQH,EACRI,UAAWf,EACXgB,cAAeJ,EACfK,cAAeJ,EAAY,kCAAApD,OACWoD,GAClC,KACL,KACF,OAEkD,MAFlDL,EAAAlE,KAAA,EAAAkE,EAAA9D,GAAA8D,EAAA,SAED7D,QAAQC,MAAM,6BAA4B4D,EAAA9D,IAAS8D,EAAA9D,GAAA,yBAAA8D,EAAA3D,OAAA,GAAA0D,EAAA,kBAGtD,gBAtBqBW,GAAA,OAAAZ,EAAAxD,MAAA,KAAAC,UAAA,KAwBToE,EAAiB,eAAAC,GAAAnF,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAmF,EAAOzB,GAAO,IAAA1B,EAAAE,EAAAkD,EAAAvE,UAAA,OAAAb,IAAAA,MAAA,SAAAqF,GAAA,cAAAA,EAAAjF,KAAAiF,EAAAhF,MAAA,OAAU,OAAR2B,EAAIoD,EAAAhD,OAAA,QAAAC,IAAA+C,EAAA,GAAAA,EAAA,GAAG,EAACC,EAAAjF,KAAA,EAAAiF,EAAAhF,KAAA,EAE9BiC,EAAAA,EAAAA,IAAU,GAADf,OAAIO,EAAQ,UAAAP,OAASmC,EAAO,YAAY,CACtEnB,OAAQ,CACNC,QAASX,EACTG,KAAMA,KAEP,KAAD,EALY,OAARE,EAAQmD,EAAA9E,KAAA8E,EAAA5C,OAAA,SAOPP,EAASQ,KAAKC,QAAQxB,KAAI,SAAAmE,GAAsB,MAAQ,CAC7D9D,GADoC8D,EAAF9D,GAElC+D,OAF4CD,EAANC,OAGtCC,QAHqDF,EAAPE,QAI/C,KAAE,aAAAH,EAAAjF,KAAA,EAAAiF,EAAA7E,GAAA6E,EAAA,SAAAA,EAAA7E,GAAC,KAAD,oBAAA6E,EAAA1E,OAAA,GAAAwE,EAAA,kBAIN,gBAjB6BM,GAAA,OAAAP,EAAAtE,MAAA,KAAAC,UAAA,I","sources":["webpack://react-homework-template/./src/css/home.module.css?f979","components/Home.jsx","server/server.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"divcontainer\":\"home_divcontainer__sBDld\"};","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchTrendingMovies } from '../server/server';\nimport css from '../css/home.module.css';\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const getTrendingMovies = async () => {\n      try {\n        const trendingMovies = await fetchTrendingMovies();\n        setMovies(trendingMovies);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    getTrendingMovies();\n  }, []);\n\n  return (\n    <div className={css.divcontainer}>\n      <h2>Trending Movies</h2>\n\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movie/${movie.id}`}>\n              <img src={movie.posterURL} alt={movie.title} />\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport { Home };\n","import axios from 'axios';\n\nconst KEY = 'b8d685aa89f64a6cf112c60dddfc9250';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async (\n  timeWindow = 'day',\n  page = 1,\n  language = 'en-US'\n) => {\n  try {\n    const response = await axios.get(`${BASE_URL}trending/all/${timeWindow}`, {\n      params: {\n        api_key: KEY,\n        page: page,\n        language: language,\n      },\n    });\n\n    return response.data.results.map(\n      ({ id, title, overview, poster_path }) => ({\n        id,\n        title,\n        overview,\n        posterURL: `https://image.tmdb.org/t/p/w500${poster_path}`,\n      })\n    );\n  } catch (error) {\n    throw error;\n  }\n};\n// Функція для пошуку фільмів\nexport const fetchMovies = async (query, page = 1) => {\n  try {\n    const response = await axios.get(`${BASE_URL}search/movie`, {\n      params: {\n        api_key: KEY,\n        query: query,\n        page: page,\n        language: 'en-US',\n      },\n    });\n\n    return response.data.results.map(\n      ({ id, title, overview, poster_path }) => ({\n        id,\n        title,\n        overview,\n        posterURL: `https://api.themoviedb.org/3/movie/${id}/images`, // постер фільму\n      })\n    );\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n\n    return {\n      id: response.data.id,\n      title: response.data.title,\n      overview: response.data.overview,\n      posterURL: `https://api.themoviedb.org/3/movie/${movieId}/images`,\n      genres: response.data.genres.map(genre => genre.name).join(', '),\n      releaseDate: response.data.release_date,\n    };\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}/credits`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n\n    return response.data.cast.map(\n      ({ cast_id, name, character, profile_path }) => ({\n        castId: cast_id,\n        actorName: name,\n        characterName: character,\n        profilePicURL: profile_path\n          ? `https://image.tmdb.org/t/p/w500${profile_path}`\n          : null,\n      })\n    );\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async (movieId, page = 1) => {\n  try {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}/reviews`, {\n      params: {\n        api_key: KEY,\n        page: page,\n      },\n    });\n\n    return response.data.results.map(({ id, author, content }) => ({\n      id,\n      author,\n      content,\n    }));\n  } catch (error) {\n    throw error;\n  }\n};\n"],"names":["Home","_useState","useState","_useState2","_slicedToArray","movies","setMovies","useEffect","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","trendingMovies","_context","prev","next","fetchTrendingMovies","sent","t0","console","error","stop","apply","arguments","_jsxs","className","css","children","_jsx","map","movie","Link","to","concat","id","src","posterURL","alt","title","KEY","BASE_URL","timeWindow","page","language","response","_args","length","undefined","axios","params","api_key","abrupt","data","results","_ref2","overview","poster_path","fetchMovies","_ref3","_callee2","query","_args2","_context2","_ref4","_x","fetchMovieDetails","_ref5","_callee3","movieId","_context3","genres","genre","name","join","releaseDate","release_date","_x2","fetchCast","_ref6","_callee4","_context4","cast","_ref7","cast_id","character","profile_path","castId","actorName","characterName","profilePicURL","_x3","fetchMovieReviews","_ref8","_callee5","_args5","_context5","_ref9","author","content","_x4"],"sourceRoot":""}