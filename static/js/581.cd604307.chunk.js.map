{"version":3,"file":"static/js/581.cd604307.chunk.js","mappings":"2PACA,EAA+B,2BAA/B,EAAoE,sBAApE,EAAqG,uBAArG,EAA2I,2BAA3I,EAAkL,wBAAlL,EAAsN,wBAAtN,EAA8P,4B,SCGxPA,EAAO,SAAHC,GAAqB,IAAfC,EAAOD,EAAPC,QACdC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAepB,OAbAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEIC,EAAAA,EAAAA,GAAUjB,GAAS,KAAD,EAAnCa,EAAQC,EAAAI,KACdZ,EAAQO,GAAUC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAElBM,QAAQC,MAAKP,EAAAK,IAAQ,yBAAAL,EAAAQ,OAAA,GAAAV,EAAA,kBAExB,kBAPmB,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KASpBhB,GACF,GAAG,CAACR,KAGFyB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAYC,SAAC,UAC5BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAaC,SACzBvB,EAAKyB,KAAI,SAAAC,GAAM,OACdN,EAAAA,EAAAA,MAAA,MAAwBC,UAAWC,EAAiBC,SAAA,CACjDG,EAAOC,gBACNH,EAAAA,EAAAA,KAAA,OACEI,IAAKF,EAAOC,cACZE,IAAKH,EAAOI,UACZT,UAAWC,KAGfE,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAcC,SAAEG,EAAOI,aACrCN,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAkBC,SAAEG,EAAOK,kBATlCL,EAAOM,OAUX,QAKf,ECvCA,EAAmC,kCAAnC,EAAmI,gCAAnI,EAAiL,6BAAjL,EAA2N,4BAA3N,EAAoQ,4BCG9PC,EAAU,SAAHvC,GAAqB,IAAfC,EAAOD,EAAPC,QACjBC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCsC,EAAOpC,EAAA,GAAEqC,EAAUrC,EAAA,GAe1B,OAbAI,EAAAA,EAAAA,YAAU,WACR,IAAMkC,EAAqB,eAAAhC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAA8B,EAAA,OAAA/B,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEA2B,EAAAA,EAAAA,IAAkB3C,GAAS,KAAD,EAA9C0C,EAAW5B,EAAAI,KACjBsB,EAAWE,GAAa5B,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAExBM,QAAQC,MAAKP,EAAAK,IAAQ,yBAAAL,EAAAQ,OAAA,GAAAV,EAAA,kBAExB,kBAP0B,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KAS3BiB,GACF,GAAG,CAACzC,KAGFyB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAqBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAmBC,SAAC,aACnCC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAgBC,SAC5BW,EAAQT,KAAI,SAAAc,GAAM,OACjBnB,EAAAA,EAAAA,MAAA,MAAoBC,UAAWC,EAAeC,SAAA,EAC5CH,EAAAA,EAAAA,MAAA,UAAQC,UAAWC,EAAeC,SAAA,CAAEgB,EAAOC,YAAY,OACtDD,EAAOE,UAFDF,EAAOG,GAGX,QAKf,EC3BMC,EAAe,WACnB,IAAQhD,GAAYiD,EAAAA,EAAAA,MAAZjD,QACFkD,GAAWC,EAAAA,EAAAA,MACjBlD,GAAwCC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CmD,EAAYjD,EAAA,GAAEkD,EAAelD,EAAA,GAepC,OAbAI,EAAAA,EAAAA,YAAU,WACR,IAAM+C,EAAqB,eAAAvD,GAAAW,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAA2C,EAAA,OAAA5C,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEJwC,EAAAA,EAAAA,IAAkBxD,GAAS,KAAD,EAA1CuD,EAAOzC,EAAAI,KACbmC,EAAgBE,GAASzC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEzBM,QAAQC,MAAKP,EAAAK,IAAQ,yBAAAL,EAAAQ,OAAA,GAAAV,EAAA,kBAExB,kBAP0B,OAAAb,EAAAwB,MAAA,KAAAC,UAAA,KAS3B8B,GACF,GAAG,CAACtD,KAGFyB,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAQ4B,QAAS,kBAAMP,GAAU,EAAE,EAACtB,SAAC,YACpCwB,GACC3B,EAAAA,EAAAA,MAAAiC,EAAAA,SAAA,CAAA9B,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKwB,EAAaO,SAClB9B,EAAAA,EAAAA,KAAA,KAAAD,SAAIwB,EAAaQ,YACjB/B,EAAAA,EAAAA,KAAC/B,EAAI,CAACE,QAASA,KACf6B,EAAAA,EAAAA,KAACS,EAAO,CAACtC,QAASA,QAGpB6B,EAAAA,EAAAA,KAAA,KAAAD,SAAG,iBAIX,C,8LCrCMiC,EAAM,mCACNC,EAAW,gCAEJC,EAAmB,eAAAhE,GAAAW,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAoD,EAAAC,EAAAC,EAAAC,EAAAC,EAAA5C,UAAA,OAAAb,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGf,OAFlBgD,EAAUI,EAAAC,OAAA,QAAAC,IAAAF,EAAA,GAAAA,EAAA,GAAG,MACbH,EAAIG,EAAAC,OAAA,QAAAC,IAAAF,EAAA,GAAAA,EAAA,GAAG,EACPF,EAAQE,EAAAC,OAAA,QAAAC,IAAAF,EAAA,GAAAA,EAAA,GAAG,QAAOtD,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGOuD,EAAAA,EAAAA,IAAU,GAADC,OAAIV,EAAQ,iBAAAU,OAAgBR,GAAc,CACxES,OAAQ,CACNC,QAASb,EACTI,KAAMA,EACNC,SAAUA,KAEX,KAAD,EANY,OAARC,EAAQrD,EAAAI,KAAAJ,EAAA6D,OAAA,SAQPR,EAASS,KAAKC,QAAQ/C,KAC3B,SAAArB,GAAA,IAAGsC,EAAEtC,EAAFsC,GAAIY,EAAKlD,EAALkD,MAAOC,EAAQnD,EAARmD,SAAUkB,EAAWrE,EAAXqE,YAAW,MAAQ,CACzC/B,GAAAA,EACAY,MAAAA,EACAC,SAAAA,EACAmB,UAAU,kCAADP,OAAoCM,GAC9C,KACF,cAAAhE,EAAAC,KAAA,GAAAD,EAAAK,GAAAL,EAAA,SAAAA,EAAAK,GAAC,KAAD,oBAAAL,EAAAQ,OAAA,GAAAV,EAAA,mBAIJ,kBAzB+B,OAAAb,EAAAwB,MAAA,KAAAC,UAAA,KA2BnBwD,EAAW,eAAAC,GAAAvE,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAuE,EAAOC,GAAK,IAAAlB,EAAAE,EAAAiB,EAAA5D,UAAA,OAAAb,IAAAA,MAAA,SAAA0E,GAAA,cAAAA,EAAAtE,KAAAsE,EAAArE,MAAA,OAAU,OAARiD,EAAImB,EAAAf,OAAA,QAAAC,IAAAc,EAAA,GAAAA,EAAA,GAAG,EAACC,EAAAtE,KAAA,EAAAsE,EAAArE,KAAA,EAEtBuD,EAAAA,EAAAA,IAAU,GAADC,OAAIV,EAAQ,gBAAgB,CAC1DW,OAAQ,CACNC,QAASb,EACTsB,MAAOA,EACPlB,KAAMA,EACNC,SAAU,WAEX,KAAD,EAPY,OAARC,EAAQkB,EAAAnE,KAAAmE,EAAAV,OAAA,SASPR,EAASS,KAAKC,QAAQ/C,KAC3B,SAAAwD,GAAA,IAAGvC,EAAEuC,EAAFvC,GAAIY,EAAK2B,EAAL3B,MAAOC,EAAQ0B,EAAR1B,SAAqB0B,EAAXR,YAAW,MAAQ,CACzC/B,GAAAA,EACAY,MAAAA,EACAC,SAAAA,EACAmB,UAAU,sCAADP,OAAwCzB,EAAE,WACpD,KACF,aAAAsC,EAAAtE,KAAA,EAAAsE,EAAAlE,GAAAkE,EAAA,SAAAA,EAAAlE,GAAC,KAAD,oBAAAkE,EAAA/D,OAAA,GAAA4D,EAAA,kBAIJ,gBAtBuBK,GAAA,OAAAN,EAAA1D,MAAA,KAAAC,UAAA,KAwBXgC,EAAiB,eAAAgC,GAAA9E,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA8E,EAAMzF,GAAO,IAAAmE,EAAA,OAAAxD,IAAAA,MAAA,SAAA+E,GAAA,cAAAA,EAAA3E,KAAA2E,EAAA1E,MAAA,cAAA0E,EAAA3E,KAAA,EAAA2E,EAAA1E,KAAA,EAEnBuD,EAAAA,EAAAA,IAAU,GAADC,OAAIV,EAAQ,UAAAU,OAASxE,GAAW,CAC9DyE,OAAQ,CACNC,QAASb,EACTK,SAAU,WAEX,KAAD,EALY,OAARC,EAAQuB,EAAAxE,KAAAwE,EAAAf,OAAA,SAOP,CACL5B,GAAIoB,EAASS,KAAK7B,GAClBY,MAAOQ,EAASS,KAAKjB,MACrBC,SAAUO,EAASS,KAAKhB,SACxBmB,UAAU,sCAADP,OAAwCxE,EAAO,WACxD2F,OAAQxB,EAASS,KAAKe,OAAO7D,KAAI,SAAA8D,GAAK,OAAIA,EAAMC,IAAI,IAAEC,KAAK,MAC3DC,YAAa5B,EAASS,KAAKoB,eAC5B,OAEqD,MAFrDN,EAAA3E,KAAA,EAAA2E,EAAAvE,GAAAuE,EAAA,SAEDtE,QAAQC,MAAM,gCAA+BqE,EAAAvE,IAASuE,EAAAvE,GAAA,yBAAAuE,EAAApE,OAAA,GAAAmE,EAAA,kBAGzD,gBArB6BQ,GAAA,OAAAT,EAAAjE,MAAA,KAAAC,UAAA,KAuBjBP,EAAS,eAAAiF,GAAAxF,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAwF,EAAMnG,GAAO,IAAAmE,EAAA,OAAAxD,IAAAA,MAAA,SAAAyF,GAAA,cAAAA,EAAArF,KAAAqF,EAAApF,MAAA,cAAAoF,EAAArF,KAAA,EAAAqF,EAAApF,KAAA,EAEXuD,EAAAA,EAAAA,IAAU,GAADC,OAAIV,EAAQ,UAAAU,OAASxE,EAAO,YAAY,CACtEyE,OAAQ,CACNC,QAASb,KAEV,KAAD,EAJY,OAARM,EAAQiC,EAAAlF,KAAAkF,EAAAzB,OAAA,SAMPR,EAASS,KAAKvE,KAAKyB,KACxB,SAAAuE,GAAA,IAAGC,EAAOD,EAAPC,QAAST,EAAIQ,EAAJR,KAAMU,EAASF,EAATE,UAAWC,EAAYH,EAAZG,aAAY,MAAQ,CAC/CnE,OAAQiE,EACRnE,UAAW0D,EACXzD,cAAemE,EACfvE,cAAewE,EAAY,kCAAAhC,OACWgC,GAClC,KACL,KACF,OAEkD,MAFlDJ,EAAArF,KAAA,EAAAqF,EAAAjF,GAAAiF,EAAA,SAEDhF,QAAQC,MAAM,6BAA4B+E,EAAAjF,IAASiF,EAAAjF,GAAA,yBAAAiF,EAAA9E,OAAA,GAAA6E,EAAA,kBAGtD,gBAtBqBM,GAAA,OAAAP,EAAA3E,MAAA,KAAAC,UAAA,KAwBTmB,EAAiB,eAAA+D,GAAAhG,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAgG,EAAO3G,GAAO,IAAAiE,EAAAE,EAAAyC,EAAApF,UAAA,OAAAb,IAAAA,MAAA,SAAAkG,GAAA,cAAAA,EAAA9F,KAAA8F,EAAA7F,MAAA,OAAU,OAARiD,EAAI2C,EAAAvC,OAAA,QAAAC,IAAAsC,EAAA,GAAAA,EAAA,GAAG,EAACC,EAAA9F,KAAA,EAAA8F,EAAA7F,KAAA,EAE9BuD,EAAAA,EAAAA,IAAU,GAADC,OAAIV,EAAQ,UAAAU,OAASxE,EAAO,YAAY,CACtEyE,OAAQ,CACNC,QAASb,EACTI,KAAMA,KAEP,KAAD,EALY,OAARE,EAAQ0C,EAAA3F,KAAA2F,EAAAlC,OAAA,SAOPR,EAASS,KAAKC,QAAQ/C,KAAI,SAAAgF,GAAsB,MAAQ,CAC7D/D,GADoC+D,EAAF/D,GAElCgE,OAF4CD,EAANC,OAGtCjE,QAHqDgE,EAAPhE,QAI/C,KAAE,aAAA+D,EAAA9F,KAAA,EAAA8F,EAAA1F,GAAA0F,EAAA,SAAAA,EAAA1F,GAAC,KAAD,oBAAA0F,EAAAvF,OAAA,GAAAqF,EAAA,kBAIN,gBAjB6BK,GAAA,OAAAN,EAAAnF,MAAA,KAAAC,UAAA,I","sources":["webpack://react-homework-template/./src/css/cast.module.css?bd60","components/Cast.jsx","webpack://react-homework-template/./src/css/reviews.module.css?e0a7","components/Reviews.jsx","components/MovieDetails.jsx","server/server.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"divContainer\":\"cast_divContainer__mUVKx\",\"heading\":\"cast_heading__JcZfA\",\"castList\":\"cast_castList__rqmAb\",\"castListItem\":\"cast_castListItem__tptOa\",\"castImage\":\"cast_castImage__rDqxA\",\"actorName\":\"cast_actorName__lF6If\",\"characterName\":\"cast_characterName__JgjwN\",\"goBackButton\":\"cast_goBackButton__tD416\"};","import React, { useState, useEffect } from 'react';\nimport { fetchCast } from '../server/server';\nimport css from '../css/cast.module.css';\n\nconst Cast = ({ movieId }) => {\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const castData = await fetchCast(movieId);\n        setCast(castData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <div className={css.divContainer}>\n      <h2 className={css.heading}>Cast</h2>\n      <ul className={css.castList}>\n        {cast.map(member => (\n          <li key={member.castId} className={css.castListItem}>\n            {member.profilePicURL && (\n              <img\n                src={member.profilePicURL}\n                alt={member.actorName}\n                className={css.castImage}\n              />\n            )}\n            <p className={css.actorName}>{member.actorName}</p>\n            <p className={css.characterName}>{member.characterName}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport { Cast };\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewsContainer\":\"reviews_reviewsContainer__KQ6F9\",\"goBackButton\":\"reviews_goBackButton__TUYFu\",\"reviewsHeading\":\"reviews_reviewsHeading__YexEG\",\"reviewsList\":\"reviews_reviewsList__9YDUL\",\"reviewItem\":\"reviews_reviewItem__8aks2\",\"authorName\":\"reviews_authorName__516Ew\"};","import React, { useState, useEffect } from 'react';\nimport { fetchMovieReviews } from '../server/server';\nimport css from '../css/reviews.module.css';\n\nconst Reviews = ({ movieId }) => {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieReviewsData = async () => {\n      try {\n        const reviewsData = await fetchMovieReviews(movieId);\n        setReviews(reviewsData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovieReviewsData();\n  }, [movieId]);\n\n  return (\n    <div className={css.reviewsContainer}>\n      <h2 className={css.reviewsHeading}>Reviews</h2>\n      <ul className={css.reviewsList}>\n        {reviews.map(review => (\n          <li key={review.id} className={css.reviewItem}>\n            <strong className={css.authorName}>{review.author_name}:</strong>\n            {review.content}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport { Reviews };\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { fetchMovieDetails } from '../server/server';\nimport { Cast } from './Cast';\nimport { Reviews } from './Reviews';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const [movieDetails, setMovieDetails] = useState({});\n\n  useEffect(() => {\n    const fetchMovieDetailsData = async () => {\n      try {\n        const details = await fetchMovieDetails(movieId);\n        setMovieDetails(details);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovieDetailsData();\n  }, [movieId]);\n\n  return (\n    <div>\n      <button onClick={() => navigate(-1)}>Go Back</button>\n      {movieDetails ? (\n        <>\n          <h1>{movieDetails.title}</h1>\n          <p>{movieDetails.overview}</p>\n          <Cast movieId={movieId} />\n          <Reviews movieId={movieId} />\n        </>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n};\n\nexport { MovieDetails };\n","import axios from 'axios';\n\nconst KEY = 'b8d685aa89f64a6cf112c60dddfc9250';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async (\n  timeWindow = 'day',\n  page = 1,\n  language = 'en-US'\n) => {\n  try {\n    const response = await axios.get(`${BASE_URL}trending/all/${timeWindow}`, {\n      params: {\n        api_key: KEY,\n        page: page,\n        language: language,\n      },\n    });\n\n    return response.data.results.map(\n      ({ id, title, overview, poster_path }) => ({\n        id,\n        title,\n        overview,\n        posterURL: `https://image.tmdb.org/t/p/w500${poster_path}`,\n      })\n    );\n  } catch (error) {\n    throw error;\n  }\n};\n// Функція для пошуку фільмів\nexport const fetchMovies = async (query, page = 1) => {\n  try {\n    const response = await axios.get(`${BASE_URL}search/movie`, {\n      params: {\n        api_key: KEY,\n        query: query,\n        page: page,\n        language: 'en-US',\n      },\n    });\n\n    return response.data.results.map(\n      ({ id, title, overview, poster_path }) => ({\n        id,\n        title,\n        overview,\n        posterURL: `https://api.themoviedb.org/3/movie/${id}/images`, // постер фільму\n      })\n    );\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n\n    return {\n      id: response.data.id,\n      title: response.data.title,\n      overview: response.data.overview,\n      posterURL: `https://api.themoviedb.org/3/movie/${movieId}/images`,\n      genres: response.data.genres.map(genre => genre.name).join(', '),\n      releaseDate: response.data.release_date,\n    };\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}/credits`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n\n    return response.data.cast.map(\n      ({ cast_id, name, character, profile_path }) => ({\n        castId: cast_id,\n        actorName: name,\n        characterName: character,\n        profilePicURL: profile_path\n          ? `https://image.tmdb.org/t/p/w500${profile_path}`\n          : null,\n      })\n    );\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async (movieId, page = 1) => {\n  try {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}/reviews`, {\n      params: {\n        api_key: KEY,\n        page: page,\n      },\n    });\n\n    return response.data.results.map(({ id, author, content }) => ({\n      id,\n      author,\n      content,\n    }));\n  } catch (error) {\n    throw error;\n  }\n};\n"],"names":["Cast","_ref","movieId","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchMovieCast","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","castData","_context","prev","next","fetchCast","sent","t0","console","error","stop","apply","arguments","_jsxs","className","css","children","_jsx","map","member","profilePicURL","src","alt","actorName","characterName","castId","Reviews","reviews","setReviews","fetchMovieReviewsData","reviewsData","fetchMovieReviews","review","author_name","content","id","MovieDetails","useParams","navigate","useNavigate","movieDetails","setMovieDetails","fetchMovieDetailsData","details","fetchMovieDetails","onClick","_Fragment","title","overview","KEY","BASE_URL","fetchTrendingMovies","timeWindow","page","language","response","_args","length","undefined","axios","concat","params","api_key","abrupt","data","results","poster_path","posterURL","fetchMovies","_ref3","_callee2","query","_args2","_context2","_ref4","_x","_ref5","_callee3","_context3","genres","genre","name","join","releaseDate","release_date","_x2","_ref6","_callee4","_context4","_ref7","cast_id","character","profile_path","_x3","_ref8","_callee5","_args5","_context5","_ref9","author","_x4"],"sourceRoot":""}