{"version":3,"file":"static/js/221.06505677.chunk.js","mappings":"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","sources":["components/Movies.jsx","server/server.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { fetchMovies } from '../server/server';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const getQueryFromUrl = search => {\n    return new URLSearchParams(search).get('query') || '';\n  };\n\n  useEffect(() => {\n    const queryFromUrl = getQueryFromUrl(location.search);\n    setQuery(queryFromUrl);\n\n    if (queryFromUrl) {\n      fetchMovies(queryFromUrl).then(setSearchResults);\n    }\n  }, [location.search]);\n\n  const handleSearch = async () => {\n    const results = await fetchMovies(query);\n    setSearchResults(results);\n    navigate(`/movies?query=${query}`);\n  };\n\n  return (\n    <div>\n      <button onClick={() => navigate(-1)}>Go Back</button>\n      <h1>Search Movies</h1>\n      <input\n        type=\"text\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n      <button onClick={handleSearch}>Search</button>\n      <ul>\n        {searchResults.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport { Movies };\n","import axios from 'axios';\n\nconst KEY = 'b8d685aa89f64a6cf112c60dddfc9250';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async (\n  timeWindow = 'day',\n  page = 1,\n  language = 'en-US'\n) => {\n  try {\n    const response = await axios.get(`${BASE_URL}trending/all/${timeWindow}`, {\n      params: {\n        api_key: KEY,\n        page: page,\n        language: language,\n      },\n    });\n\n    return response.data.results.map(\n      ({ id, title, overview, poster_path }) => ({\n        id,\n        title,\n        overview,\n        posterURL: `https://image.tmdb.org/t/p/w500${poster_path}`,\n      })\n    );\n  } catch (error) {\n    throw error;\n  }\n};\n// Функція для пошуку фільмів\nexport const fetchMovies = async (query, page = 1) => {\n  try {\n    const response = await axios.get(`${BASE_URL}search/movie`, {\n      params: {\n        api_key: KEY,\n        query: query,\n        page: page,\n        language: 'en-US',\n      },\n    });\n\n    return response.data.results.map(\n      ({ id, title, overview, poster_path }) => ({\n        id,\n        title,\n        overview,\n        posterURL: `https://api.themoviedb.org/3/movie/${id}/images`, // постер фільму\n      })\n    );\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n\n    return {\n      id: response.data.id,\n      title: response.data.title,\n      overview: response.data.overview,\n      posterURL: `https://api.themoviedb.org/3/movie/${movieId}/images`,\n      genres: response.data.genres.map(genre => genre.name).join(', '),\n      releaseDate: response.data.release_date,\n    };\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}/credits`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n\n    return response.data.cast.map(\n      ({ cast_id, name, character, profile_path }) => ({\n        castId: cast_id,\n        actorName: name,\n        characterName: character,\n        profilePicURL: profile_path\n          ? `https://image.tmdb.org/t/p/w500${profile_path}`\n          : null,\n      })\n    );\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async (movieId, page = 1) => {\n  try {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}/reviews`, {\n      params: {\n        api_key: KEY,\n        page: page,\n      },\n    });\n\n    return response.data.results.map(({ id, author, content }) => ({\n      id,\n      author,\n      content,\n    }));\n  } catch (error) {\n    throw error;\n  }\n};\n"],"names":["Movies","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","searchResults","setSearchResults","navigate","useNavigate","location","useLocation","useEffect","search","queryFromUrl","URLSearchParams","get","fetchMovies","then","handleSearch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","results","_context","prev","next","sent","concat","stop","apply","arguments","_jsxs","children","_jsx","onClick","type","value","onChange","e","target","map","movie","Link","to","id","title","KEY","BASE_URL","fetchTrendingMovies","timeWindow","page","language","response","_args","length","undefined","axios","params","api_key","abrupt","data","_ref2","overview","poster_path","posterURL","t0","_ref3","_callee2","_args2","_context2","_ref4","_x","fetchMovieDetails","_ref5","_callee3","movieId","_context3","genres","genre","name","join","releaseDate","release_date","console","error","_x2","fetchCast","_ref6","_callee4","_context4","cast","_ref7","cast_id","character","profile_path","castId","actorName","characterName","profilePicURL","_x3","fetchMovieReviews","_ref8","_callee5","_args5","_context5","_ref9","author","content","_x4"],"sourceRoot":""}